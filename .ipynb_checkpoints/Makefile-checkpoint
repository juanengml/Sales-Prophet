# Vari√°veis
PROJECT_NAME=sales-prophet
FRONTEND_IMAGE_NAME=$(PROJECT_NAME)-frontend
BACKEND_IMAGE_NAME=$(PROJECT_NAME)-backend

# Comandos
build-front:
	docker build -t $(FRONTEND_IMAGE_NAME) -f frontend/Dockerfile .

build-back:
	docker build -t $(BACKEND_IMAGE_NAME) -f backend/Dockerfile .

start-front:
	docker run --network my-network -d --name $(FRONTEND_IMAGE_NAME) -p 8501:8501 $(FRONTEND_IMAGE_NAME)

start-back:
	docker run --network my-network -d --name $(BACKEND_IMAGE_NAME) -p 5000:5000 $(BACKEND_IMAGE_NAME)

stop-front:
	docker stop $(FRONTEND_IMAGE_NAME)
	docker rm $(FRONTEND_IMAGE_NAME)

stop-backe:
	docker stop $(BACKEND_IMAGE_NAME)
	docker rm $(BACKEND_IMAGE_NAME)

shell-front:
	docker exec -it $(FRONTEND_IMAGE_NAME) sh

shell-back:
	docker exec -it $(BACKEND_IMAGE_NAME) sh
run:
	make build-front
	make build-backe
	make start-front
	make start-back

stop:
	make stop-front
	make stop-back

logs-front:
	docker logs -f $(FRONTEND_IMAGE_NAME)

logs-back:
	docker logs -f $(BACKEND_IMAGE_NAME)
    
network:
	docker network create my-network

help:
	@echo "\tmake build-frontend-image: Builds the frontend Docker image"
	@echo "\tmake build-backend-image: Builds the backend Docker image"
	@echo "\tmake start-frontend: Starts the frontend Docker container"
	@echo "\tmake start-backend: Starts the backend Docker container"
	@echo "\tmake stop-frontend: Stops the frontend Docker container"
	@echo "\tmake stop-backend: Stops the backend Docker container"
	@echo "\tmake run: Builds and starts both frontend and backend containers"
	@echo "\tmake stop: Stops both frontend and backend containers"
	@echo "\tmake help: Shows this help message"

